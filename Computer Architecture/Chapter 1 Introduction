chapter 1 컴퓨터 아키텍쳐 서론
1. 1 도입
- 컴퓨터에서는 메모리 계층성과 프로세서 병렬성을 이해하는 것이 중요하다.

1. 2 컴파일과 어셈블러
- hardware < System Software < Application Software
- System Software ex) OS, Debugger, utility program, Compiler. etc
- 고급언어 -> Assembly Language -> Machine Language

1. 3 하드웨어
- 컴퓨터는 기본적으로 input, output, memory, datapath, control 로 구성된다.
- main memory: 실행 중인 프로그램과 프로그램에 필요한 데이터의 저장소
  DRAM으로 만들어진다.
- cache memory: 프로세서 내부에 있는 메모리
  SRAM으로 만들어진다.
- Random Access Memory: 어떤 공간의 위치를 읽어도 같은 시간이 걸린다.
- ABI(Application Binary Interface): 응용프로그래머에게 제공되는 명령어 집합+운영체제 인터페이스
- Main memory: Volatile memory
- Second memory: nonvolatile memory

1. 4 프로세서와 메모리 생산 기술
- Transistor: 전기신호로 제어되는 on/off 스위치.
- silicon crystal ingot -> wafer -> defect 발견 -> 체크 및 절단 -> die or chip 생성 
  -> bonding. 
- bonding: 문제가 없는 die를 입출력 핀과 연결하는 것.

1. 5 성능
- 성능을 평가하는 방법은 매우 다양하다.
- response time, execution time, throughput.
- cpu execution time = user cpu execution time + system cpu execution time.
- cpu execution time = 프로그램의 CPU 클럭 사이클 수 x 클럭 사이클 시간.
                      = 프로그램의 CPU 클럭 사이클 수/클럭 속도.
- CPU클럭 사이클 수 = 명령어 수 x CPI(Clock cycle per Instruction).

1. 6 전력 장벽
- 속도와 전력은 같이 증가하게 된다.
- 그래서 오늘날은 전력한계 문제 때문에 단일 프로세서가 아닌 멀티 프로세서를 사용.
- 벤치마크: 컴퓨터의 성능을 평가하는데 사요되는 프로그램.
- MIPS = 명령어 개수/(실행시간 X 10^6).
