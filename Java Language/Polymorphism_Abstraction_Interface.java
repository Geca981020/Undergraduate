package JavaStudy;

public class Polymorphism_Abstraction_Interface {
	public static void main(String[] args) {
		/*
		[객체의 형 변환]
		- 상위클래스 변수명 = new 하위클래스(); 가능 / is-A 관계
  		상위클래스의 변수와 함수만 사용 가능.
  		하위 클래스로 강제 형 변환을 하면 하위클래스의 변수와 함수도 사용 가능.
		- 객체명 instanceof 클래스명: 객체가 클래스로부터 만들어졌으면 true 아니면 false.

		11. 2 다형성
		- Polymorphism: 추상 클래스와 인터페이스, 객체 형 변환, 오버라이딩 등을 이용하여 구현.

		11. 3 추상 클래스
		- abstract class 클래스이름{멤버 변수, 메소드, abstract 메소드;}

		11. 4 인터페이스
		- interface 인터페이스이름{상수, 메소드 선언;}
		- interface를 이용해 다중 상속과 비슷하게 할 수 있고, 더욱 완벽한 추상화를 만들 수 있다.
		- 인터페이스에 정의된 상수 메소드선언은 public이 기본이며 나머지 사용 불가능.
		- 클래스 이름 implements 인터페이스 이름들
		 */
	}
}
