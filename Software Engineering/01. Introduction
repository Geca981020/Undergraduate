chapter1 소프트웨어 공학 소개
1. 1 소프트웨어의 이해
- 프로그램: source code
- 소프트웨어: source code + 모든 산출물 + 각 단계마다 생성되는 문서들
  프로그램 뿐만 아니라 그 이상의 것도 포함하는 매우 포괄적인 개념.

- 관리 소프트웨어: 자료를 받아들여 가공한 후 정보를 제공하는 소프트웨어. 
- 제어 소프트웨어: 각종 센서를 이용하거나 기기들의 동작을 제어하는 소프트웨어.
- 임베디드 소프트웨어: 장비에 내장된 형태의 소프트웨어.

<소프트 웨어의 특징>
- 제조가 아닌 개발.
- 소모가 아닌 품질저하.

<소프트웨어의 당면과제>
- 소프트웨어 개발의 느린 발전 속도.
- 새로운 소프트웨어에 대한 사용자 요구의 증가.

<software crisis>
- 정의: 소프트웨어 생산성을 높이는 기술과 전문인력이 절대적으로 필요한데 반해 공급이 수요를 충족하지 못해서 소프트웨어에 대한 사용자의 요구사항을 처리할 수 없는 문제가 발생한 것.
- 발생 요인: 관리 기술의 부재, 개발 기술에 대한 훈련 부족, 생산성 저조
- 결과: 유지보수의 어려움, 성능 부족, 기간 지연 및 비용 증가

<대규모 소프트웨어 개발이 어려운 이유>
- 개발 과정이 복잡하다.
- 참여 인력이 많다
- 개발 기간이 길다.

1. 2 공학과 소프트웨어 공학의 이해
- 자연과학: 자연의 법칙을 탐구하고 발견하는 것.
- 공학: 자연과학이 발견한 자연의 법칙을 이용해 인류의 편익을 위해 무언가를 만드는 것.
- 공학의 특성: 정해진 기간내에 주어진 비용으로 만듦. 최고가 아닌 최선이 목표

- 소프트웨어 공학:　소프트웨어 개발과정에 공학적인 원리를 적용하여 소프트웨어를 개발.
- 정의: 품질 좋은 소프트웨어를 경제적으로 개발하기 위해 개발하는 각 과정을 나누고, 공학 및 방법을 적용하여 효율적으로 개발하는 것을 연구하는 학문.
- 목적: 생산성 향상, 고품질 소프트웨어 개발

1. 3 소프트웨어 개발 단계의 소개
- SDLC(Software Development life Cycle): 소프트웨어를 개발해나가는 일련의 과정
- 계획 -> 요구분석 -> 설계 -> 구현 -> 테스트 -> 유지보수
