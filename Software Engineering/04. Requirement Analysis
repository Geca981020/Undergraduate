chapter4 요구 분석
4. 1 정의
- SW 개발의 목적: 개발된 소프트웨어의 고객 만족
- 고객 만족을 위한 특성: 적시성(빠른 출시를 통한 시장 점유), 유연성(다양한 환경에서의 적응성), 통합(기존 시스템과의 쉬운 통합)
- 고객 만족의 개발 조건: 고품질, 정해진 기간내, 주어진 예산내 개발

- 요구사항(requirement): 사용자와 개발자 간에 합의한 개발범위에서 시스템이 제공해야 하는 기능.
- 요구 분석 명세서(specification): 개발 초기에 사용자의 요구사항을 추출하여 정리한 문서.
- 소프트웨어가 무엇을 만들어야하는지 정확히 이해하고, 다른 개발자에게 전달해야하므로 매우 중요한 단계.

4. 2 요구 분석의 이해
- 요구분석: 사용자의 요구사항을 조사하고 확인하는 과정.
- 고객에게 무엇(what)을 제공할 것인가를 기술하는 것 how X.
  분석과정을 통하여 많은 협상과 타협이 이루어진다. 성공보다는 실패 방지.

- 요구분석의 어려움
1. 이해력 부족
2. 의사 소통의 문제
3. 계속 변하는 요구사항
4. 애매 모호한 요구사항
- 분석가의 역할: 사용자의 요구를 정확하게 획득하고, 이해 당사자들 간의 주장을 조율
                개발 업무에 대한 지식이 필요.

4. 3 요구 분석 절차와 요구사항 종류
- 요구분석절차: 자료 수집 -> 요구사항도출 -> 문서화 -> 검증
1) 자료수집 ex) 인터뷰, 설문 조사, 관찰, 브레인 스토밍 등
3) 문서화: 요구분석 명세서 작성

- 요구 사항 분류
요구 사항 -> 기능적, 비기능적 or 요구사항 -> 사용자, 시스템
1) 기능적 요구사항: 시스템이 사용자를 위해 무엇을 하는가 ex) 기능, 제공하는 서비스
2) 비기능적 요구사항: 품질(신뢰성: 장애없이 동작하는 비율, 사용성: SW 배우는데 들어가는 노력, 안전성, 보안성, 성능), 제약사항
3) 사용자 요구사항: 사용자 요구분석 명세서로 사용자가 이해하기 쉽도록 작성
  ex) 다이어그램 사용
4) 시스템 요구사항: 시스템 요구분석 명세서로 전문적 표현을 사용하여 작성


4. 4 요구 사항의 표현
- 모델: 어떤 대상의 핵심 특징만을 선별하여 기호나 그림으로 체계적으로 표현한 것.
- 소프트웨어에서는 여러 관점의 모델을 사용.
- 장점: 이해도 향상, 의사소통 향상
- 단점: 일정 지연 가능성

- 모델링: 모델을 제작하는 과정
- 모델링 언어: 모델링을 할 때 사용하는 표기법, 도구
1) 구조적 방법론: DFD(Data Flow Diagram), DD(Data Dictionary), 프로세스 명세
2) 정보공학 방법론: DB 설계 시 사용하는 ERD(Entity-Relationship Diagram)
3) 객체지향 방법론: UML 표기법
4) 동적 모델링: STD

<DFD>
- Terminator: 출원지, 목적지를 나타냄(직사각형 네모)
- Data flow: 자료의 흐름을 나타냄. (화살표)
- Data store: 자료가 저장되는 곳을 나타냄(DB)
- Process: 자료를 입력 받아 처리하는 알고리즘(동그라미)

<ERD>
- DB에 저장될 데이터를 개체와 관계를 중심으로 작성

<유스케이스 다이어그램>
- 유스케이스: 사용자의 요구를 나타내는 기능.
- 사용자 엑터: 시스템을 사용하는 사람.
- 시스템 엑터: 서로 연동되는 또 다른 시스템.

4. 5 요구 사항의 문서화
- 요구분석 명세서: 요구 분석 과정의 최종 산출물. 설계 및 구현에서 참조할 사항 포함.
- 사용자 입장: 계약서 / 개발자 입장: 개발 목록 / 테스터 입장: 테스트 목록

<요구분석 명세서 작성시 주의 사항>
1) 사용자가 읽기 쉽고, 이해할 수 있도록 작성.
2) 개발자가 설계와 코딩에 효과적으로 사용할 수 있도록 작성.
3) 테스트 기준 용도로 사용되도록 정량적으로 작성.
4)　품질에 대한 우선순위를 명시할 것.

<잘 만든 요구분석 명세서의 특징>
1) 완전성(completeness): 빠진 부분 없이 모두 있다.
2) 명확성(unambiguity): 애매 모호 하지 않은 표현으로 명확히 작성.
3) 일관성(consistency): 중복되고, 불일치하는 내용이 없음.
4) 변경 용이성(modifiability): 변경하기 쉽게 작성할 것. 내용이 서로 의존적이지 않게 작성
5) 검증 가능성(verifiability): 검사할 수 있도록 작성할 것.
6) 추적 가능성(traceability): 오류 발생지점을 추적이 가능하도록 작성할 것.

<비정형 & 정형>
- 비정형 명세 기법: 자연어, 다이어그램 사용/이해 쉬움, 하지만 애매모호한 표현
- 정형 명세 기법: Z정형(수학적 원리) 사용/정확하고 간결한 표현, 표기법을 위한 공부 필요

<요구사항 검증>
- 정리한 요구분석 명세서가 정확하고 완전하게 서술되었는지 검토하는 활동
완전성, 명확성, 일관성, 변경용이성, 검증가능성, 추적가능성, 
기능성: how보다 what에 관점을 두고 서술되었는가?
