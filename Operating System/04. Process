4chapter Process
4. 1 Definition
- Program: 컴퓨터에게 알려주는 순서가 있는 명령어들의 집합.
- Process: 컴퓨터에서 실행중인 프로그램
- Task: 프로세스 1개, Job: 프로세스 여러 개가 모여 일을 처리 할 때 

Process의 심화 정의
- 스케쥴링의 기본 단위이며, 운영체제가 Process ID를 주고 관리한다.
- Process안에는 CPU context(register), OS Resource(memory), PID 등이 있다.

Process Memory

- data는 global variable, code는 local variable.
- global은 read/write segment에, local은 stack에 저장
4. 2 Creation & Termination
Process Creation
- Process Hierarchy: 한 프로세스가 다른 프로세스를 만든다. parent-child 관계
1)유닉스에서는 process group라고 부르며, 윈도우에는 이런 개념이 없지만 프로세스가 다른 프로세스를 만든다.
2) 프로세스는 유닉스에서 ps로, 윈도우에서는 작업관리자로 볼 수 있다.
3) system call인 fork(유닉스), CreateProcess(윈도우)를 불러 새로운 process를 생성
- System initialization
1) init process: PID가 1번인 프로세스를 부팅시 강제로 하나를 만든다. fork x

- Resource Sharing: 부모가 자녀에게 자원을 상속. 자식이 실행되는 동안 부모는 기다릴 수도 같이 실행될 수 도 있다.

Process Termination
1) Normal Exit(Voluntary) ex) return 0;
2) Error Exit(Voluntary) ex) return -1;
3) Fatal Exit(involuntary) ex) segmentation fault, protection fault
4) 또 다른 프로세스가 다른 프로세스를 죽인다, 자식이 부모를 죽일 수 도 있고 자기 자신은 생존 가능, 권한만 존재한다면

4. 3 Fork & Exec & CreateProcess
Fork: 자식 프로세스를 만드는 리눅스 system call
- 자식은 부모의 공간을 그대로 복사하여 메모리에 로드시킨다.
- 부모는 자식의 PID를 받고, 자식은 0 값을 받는다.
- PCB를 만들고, 주소공간을 로드해 PCB를 readt queue에 넣는다.
ex) Web Server에 주로 사용

Exec: 새로운 걸 만드는게 아닌 자기자신을 다른 프로그램으로 직접 바꾼다.
- 현재 프로세스 중단 -> 프로그램을 읽어와서 기존 주소공간에 로드

CreateProcess: Windows에서 Fork를 만드는 방식
- Fork와 Exec는 int인 반면 CreateProcess는 bool 형이며, fork는 인자가 없지만, CreateProcess는 여러 인자가 존재한다.
- PCB를 만들고, 주소공간을 로드해 PCB를 readt queue에 넣는다.

4. 4 Process State Transition & PCB
Process State Transition

PCB
- 프로세스마다 가지고 있는 자기자신의 정보를 저장하는 블록.
1) Process Management: PC, Register, Stack Pointer, PID
2) Memory Management: Point to text(or data or stack) segment
3) File Management: Root Directory, Working Directory
- 프로세스가 실행 중 일 때 정보들은 CPU안에 있고, 프로세스가 중단 되면 CPU안에 있는 값들을 Memory에 있는 PCB에 저장한다. 실행되면 다시 PCB -> CPU로 데이터 이동.

4. 5 Context Switch & Process State Queue
Context Switch: CPU를 사용하고 있는 프로세스를 다른 프로세스로 전환하는 행위
- 이 작업에는 overhead가 들어가며, overhead는 haraware support에 의존한다.
- 초당 100~1000번 정도 일어난다.

Process State Queue
- OS는 queue로 PCB를 관리한다.
- ready queue, wait queue 가 존재하며 wait queue는 디바이스마다 가지고 있다.
- process가 상태를 변경함에 따라 PCB가 queue를 이동한다.
- 두 개 이상의 queue에 하나의 PCB를 달 수 는 없다.

- Process 생성: PCB 할당, PCB 초기화, PCB를 queue에 넣는다.
- Process 종료: PCB 할당 해제
- PCB는 new 상태일 때 queue에 안들어간다.

4. 6 IPC
Inside a Machine
- pipe, FIFO, shared Memory, Sockets
Across Machine
- Sockets, RPCs, JAVA RMI
