package JavaStudy;

public class Inheritance {
	public static void main(String[] args) {
		/*
		[도입]
		- 장점: 클래스 검색, 확장 ,변경 쉬움.
		- 중요: 다중상속불허, 자바의 모든 클래스는 Object 클래스의 하위 클래스이다.
        Object class는 java.lang 패키지에 속해 있는 라이브러리 클래스.
		- 상속: class 클래스이름 extends 상위클래스이름{}

		[상속과 생성자]
		- 생성자는 상속이 되지 않는다.
		- 하위클래스에 묵시적 생성자[매개변수 없는 생성자]가 있다면, 하위 클래스로부터 객체가 생성될 때 상위 클래스의 묵시적 생성자가 먼저 수행된다.
		- 하위클래스에 명시적 생성자만 있다면, 상위 클래스의 묵시적 생성자 우선 수행.
		- 하위클래스에 명시적, 묵시적 생성자 모두 있다면 상위 클래스의 묵시적 생성자 우선 수행.
		- 하위클래스에서 같은 이름으로 멤버변수가 사용되면, 상위 클래스의 멤버변수 접근 불가능.

		[오버라이딩]
		- Overloading: 같은 클래스내에서 같은 이름의 생성자나 메소드에서 사용
		- Overriding: 상위클래스의 메소드를 하위 클래스에 다시 선언.
  		상위클래스의 메소드와 반환 타입, 이름, 매개변수의 형과 개수가 일치해야한다.
		- 메소드를 오버라이딩 할 때 상위 클래스의 한정자보다 허용범위가 넓은 경우에만 허용.
  		public > protected > 한정자 사용x , private는 오버라이딩 못함.  
		- 클래스 메소드를 일반 메소드로 오버라이딩 할 수 없음.
		- @override 주석 사용.

		[예약어 super, final]
		<super>
		- 하위 클래스에 의해 가려진 상위 클래스의 변수나 메소드에 접근할 때 사용.
		- 상위 클래스의 명시적 생성자를 사용하기 위해.

		<final>
		- 3가지 형태, 모두 변하는 것을 방지.
		1) 메소드 지역 변수, 객체 변수에서는 상수를 의미.
		2) 메소드에 붙으면 이 메소드는 오버라이딩 불가능을 의미.
		3) 클래스에 붙으면 상속을 허용하지 않음. 
		 */
	}
}
