1.	4 Data Abstraction
-	C언어에서 자료를 그룹화 하는 방법: array, struct
-	데이터 타입은 객체와 그 객체 위에서 작동하는 연산들의 집합이다.

-	ADT(abstract data type): 자료들(data)과 그 자료들에 대한 연산들(function)의 집합.
기능을 서술하지 않고, 기능이 무엇을 하는 지만 나열한 것.
Ex) java, python의 class

1.	5 Performance analysis
-	Performance analysis: 컴퓨터와 상관없이 시공간의 추산에 초점을 두는 분야.
-	Performance measurement: 컴퓨터에 의존적인 실행시간을 얻는 것.

-	Space complexity: 프로그램을 실행시켜 완료하는데 필요로 하는 공간의 양.
1)	고정 공간 요구: 프로그램의 입출력 횟수, 크기에 관계없는 공간 요구.
코드 저장공간, 단순 변수, 고정 크기의 구조 변수, 상수
2)	가변 공간 요구: 풀려는 문제의 특정 인스턴스에 의존되는 공간 요구.
순환 호출, 동적으로 필요한 공간
	S(p) = c + Sp(I) / 총 공간 요구 = 고정 공간 요구 + 가변 공간 요구.

-	Time complexity: 프로그램을 실행시켜 완료하는데 필요로 하는 시간의 양.
-	2개는 서로 상반되어 모두 잡을 수 없으며, Time complexity를 더 우선시 한다.
-	프로그램 P에 의해 소요되는 시간은 컴파일 시간(주로 무시) + 실행 시간
-	시간 복잡도는 best case, average case, worst case중 worst case를 찾고 표기.

-	점근 표기법
1)	Big – Oh: 크기 이하
2)	Omege: 크기 이상
3)	Theta: 크기 동일

1.	6 Performance measurement
-	C언어에서는 #include <time.h>로 프로그램 시간을 측정할 수 있다.
