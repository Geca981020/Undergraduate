2. 3 희소행렬(sparse matrix)
- 행렬의 대부분의 원소들이 0으로 구성된 행렬
- 이 행렬을 일반적인 리스트 같은 방법으로 구현하면 메모리 공간 낭비가 심하다.
- 그래서 희소행렬의 구현방식이 있다.

- declaration
typedef struct{
	int col;
	int raw;
	int value;
} term;
term a[100], b[100];

- Sparse Matrix Exprssion
- term a[MAX_SIZE]에서 a[0]는 행과 열, value의 개수를 의미.
- a[1]부터 sparse matrix의 0이 아닌 원소들을 차례대로 삽입.

- Transpose
void transpose(term a[]. term b[]){
// a행렬이 대상, b행렬은 새로 생성되며 a행렬의 transpose matrix
	int i, j, n, cb;
	n = a[0].value;
	b[0].row = a[0].col;
	b[0].col = a[0].raw;
	b[0].value = n;
	cb = 1;
	if(n>0){
		for(i = 0; i < a[0].col; i++)
			for(j=1; j<=n; j++)
				if(a[j].col == i){
					b[cb].raw = a[j].col;
					b[cb].col = a[j].raw;
					b[cb].value = a[j].value;
					cb++;
				}
	}
}

2. 4 다차원 배열의 표현
- A[i][j]의 주소 = baseaddress + i*upper1 + j

2. 5 문자열(String)
- C언어 문자열 함수
strlen(str): 문자열 str의 길이를 리턴.
strcpy(str1, str2): 문자열 str2를 str1에 복사.
strcat(str1, str2): 문자열 str2를 str1에 접합.
strcmp(str1, str2): 문자열 str1과 str2를 비교. 같으면 0
strchr(str, ch): 문자열 str에서 문자 ch가 처음 나타난 위치 리턴.<포인터>
strstr(str1, str2): str1에서 str2가 처음 나타난 위치 리턴.<포인터>
strtok(str1,str2): str1에서 str2를 구분문자로 하여 토큰(단어) 추출.<포인터>
atoi(str): 문자열 str을 int정수로 변환하여 리턴.
atol(str): 문자열 str을 long int로 변환하여 리턴.
atof(str): 문자열 str을 double로 변환하여 리턴.
